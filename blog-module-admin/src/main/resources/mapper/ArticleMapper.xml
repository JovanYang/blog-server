<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.mapper.ArticleMapper">
    
    <!-- 分页查询文章列表 -->
    <select id="selectArticlePage" resultType="com.blog.model.entity.Article">
        SELECT a.*, c.name as category_name, u.nickname as author_name
        FROM article a
        LEFT JOIN category c ON a.category_id = c.id
        LEFT JOIN user u ON a.author_id = u.id
        <where>
            a.is_deleted = 0
            <if test="query.keyword != null and query.keyword != ''">
                AND (
                    a.title LIKE CONCAT('%', #{query.keyword}, '%')
                    OR a.content LIKE CONCAT('%', #{query.keyword}, '%')
                )
            </if>
            <if test="query.categoryId != null">
                AND a.category_id = #{query.categoryId}
            </if>
            <if test="query.authorId != null">
                AND a.author_id = #{query.authorId}
            </if>
            <if test="query.status != null">
                AND a.status = #{query.status}
            </if>
        </where>
        ORDER BY a.create_time DESC
    </select>
    
    <!-- 获取文章统计信息 -->
    <select id="selectStats" resultType="java.util.Map">
        SELECT 
            COUNT(*) as total_count,
            SUM(CASE WHEN status = 1 THEN 1 ELSE 0 END) as published_count,
            SUM(CASE WHEN status = 0 THEN 1 ELSE 0 END) as draft_count,
            COALESCE(SUM(view_count), 0) as total_view_count,
            COALESCE(SUM(like_count), 0) as total_like_count,
            COALESCE(SUM(pv), 0) as total_pv,
            COALESCE(SUM(uv), 0) as total_uv,
            COALESCE(AVG(read_time), 0) as avg_read_time
        FROM article
        WHERE is_deleted = 0
    </select>
</mapper> 